version: "3.8"

services:
  postgres:
    image: postgres:12
    container_name: bot_postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./app.env
    ports:
      - "5433:5432"

  redis:
    image: redis:alpine
    container_name: bot_redis

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bot_web
    restart: always
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/image_vectorizer_bot
    ports:
      - "8000:8000"
    env_file:
      - ./app.env
    depends_on:
      - postgres

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bot_celery
    restart: always
    command: celery -A image_vectorizer_bot worker --loglevel=INFO
    volumes:
      - .:/image_vectorizer_bot
    env_file:
      - ./app.env
    depends_on:
      - redis
      - web

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bot_celery_beat
    restart: always
    command: celery -A image_vectorizer_bot beat -l info --scheduler django_celery_beat.schedulers.DatabaseScheduler
    volumes:
      - .:/image_vectorizer_bot
    env_file:
      - ./app.env
    depends_on:
      - redis
      - celery
      - web

volumes:
  postgres_data:
